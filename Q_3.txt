#include <stdio.h>
#include <stdlib.h>


//https://www.programiz.com/c-programming/examples/matrix-multiplication-function.

void multiplyMatrices(int rowsFirst, int M1, int *firstMatrix, int rowsSecond, int M2, int *secondMatrix, int *mult)

{

	if (M1 != rowsSecond){
	    printf("Invalid input");
	    exit(1);
	}
	
	int i, j, k;

	// Multiplying matrix firstMatrix and secondMatrix

	for(i = 0; i < rowsFirst; i++)
	{
		for(j = 0; j < M2; j++)
		{
			for(k=0; k < M1; k++)
			{
				// *(mult + i*M2 + rowsFirst) += firstMatrix[i][k] * secondMatrix[k][j];
				int firstIndex = *firstMatrix + (M1*i) + k;
				int secondIndex = *secondMatrix + (M2*k) + j;
				printf("first: %d\n", firstIndex);
				printf("second: %d\n", secondIndex);
				
				*(mult + j*M2 + i) += firstIndex * secondIndex;
				// printf("%d\n", *(mult + j*M2 + i));
			}
			
		}
	}
}


void display(int rowFirst, int columnSecond, int *mult)

{

	int i, j;

	printf("\nOutput Matrix:\n");

	for(i = 0; i < rowFirst; i++)

	{

		for(j = 0; j < columnSecond; j++)

		{

			printf("%d  ", *(mult + i*columnSecond +j));

			if(j == columnSecond - 1)

				printf("\n\n");

		}

	}

}

int main()

{
// Initializing elements for firstMatrix.
    int firstMatrix[3][4] = {  

        {0, 1, 2, 3} ,   /*  initializers for row indexed by 0 */

        {4, 5, 6, 7} ,   /*  initializers for row indexed by 1 */

        {8, 9, 10, 11}   /*  initializers for row indexed by 2 */

    };

// Initializing elements for secondMatrix.
    int secondMatrix[4][3] ={

        {3,5,2} , /*  initializers for row indexed by 0 */

        {3,5,2} , /*  initializers for row indexed by 1 */

        {3,5,2} , /*  initializers for row indexed by 2 */

        {3,5,2} , /*  initializers for row indexed by 3 */

    };
    
    int answer[3][3];
    
    for (int i=0; i<3; i++)
        for (int j=0; j<3; j++)
            answer[i][j]=0;

    multiplyMatrices(3,4,&firstMatrix, 4,3, &secondMatrix, &answer);
    /// Are we grt here the numbers of rows and colums of the matrixs?
    display(3,4,&answer);
    printf("%d\n", answer);
	return 0;

}
